package controllers;

import java.io.IOException;
import javax.servlet.ServletException;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;
import dto.AccountDTO;
import models.Account;
import services.AccountService;

public class AccountController extends HttpServlet {
    private AccountService accountService = new AccountService();

    @Override
    protected void doPost(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException {
        String action = req.getParameter("action");
        if ("register".equals(action)) {
            register(req, resp);
        } else if ("login".equals(action)) {
            login(req, resp);
        } else if ("updateProfile".equals(action)) {
            updateProfile(req, resp);
        } else if ("changePassword".equals(action)) {
            changePassword(req, resp);
        }
    }

    private void register(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException {
        String username = req.getParameter("username");
        String password = req.getParameter("password");
        String email = req.getParameter("email");

        boolean success = accountService.register(username, password, email);
        if (success) {
            resp.sendRedirect("login.jsp?success=registered");
        } else {
            req.setAttribute("error", "Tên tài khoản đã tồn tại.");
            req.getRequestDispatcher("register.jsp").forward(req, resp);
        }
    }

    private void login(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException {
        String username = req.getParameter("username");
        String password = req.getParameter("password");

        Account account = accountService.login(username, password);
        if (account != null) {
            AccountDTO accountDTO = new AccountDTO(account.getAccountId(), account.getUsername(), account.getEmail());
            HttpSession session = req.getSession();
            session.setAttribute("user", accountDTO);
            resp.sendRedirect("home.jsp");
        } else {
            req.setAttribute("error", "Sai tài khoản hoặc mật khẩu.");
            req.getRequestDispatcher("login.jsp").forward(req, resp);
        }
    }

    private void updateProfile(HttpServletRequest request, HttpServletResponse response) throws IOException {
        HttpSession session = request.getSession();
        AccountDTO user = (AccountDTO) session.getAttribute("user");

        if (user != null) {
            String username = request.getParameter("username");
            String email = request.getParameter("email");

            user.setUsername(username);
            user.setEmail(email);

            boolean updated = accountService.updateProfile(user);
            if (updated) {
                session.setAttribute("user", user);
                response.sendRedirect("profile.jsp?success=profile_updated");
            } else {
                response.sendRedirect("profile.jsp?error=update_failed");
            }
        }
    }

    private void changePassword(HttpServletRequest request, HttpServletResponse response) throws IOException {
        HttpSession session = request.getSession();
        AccountDTO user = (AccountDTO) session.getAttribute("user");

        if (user != null) {
            String oldPassword = request.getParameter("oldPassword");
            String newPassword = request.getParameter("newPassword");

            if (accountService.checkPassword(user.getAccountId(), oldPassword)) {
                boolean updated = accountService.updatePassword(user.getAccountId(), newPassword);
                if (updated) {
                    response.sendRedirect("profile.jsp.jsp?success=password_updated");
                } else {
                    response.sendRedirect("profile.jsp?error=password_update_failed");
                }
            } else {
                response.sendRedirect("profile.jsp?error=wrong_old_password");
            }
        }
    }

    @Override
    protected void doGet(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException {
        String action = req.getParameter("action");
        if ("logout".equals(action)) {
            logout(req, resp);
        }
    }

    private void logout(HttpServletRequest req, HttpServletResponse resp) throws IOException {
        HttpSession session = req.getSession();
        session.invalidate();
        resp.sendRedirect("login.jsp");
    }
}
